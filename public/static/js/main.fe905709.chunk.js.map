{"version":3,"sources":["utils/apolloQueries.js","App.js","components/Update.js","Root.js","reportWebVitals.js","index.js","styles/App.module.css","styles/Update.module.css"],"names":["query","gql","postQuery","addMutation","delMutation","updMutation","App","useState","title","setTitle","description","setDescription","useQuery","loadingPosts","loading","dataPosts","data","setData","useEffect","mounted","useMutation","addPost","error","deletePost","mutationLoading","mutationError","console","log","message","Loader","center","content","className","styles","app__inputPanel","onChange","e","target","value","placeholder","app__addBtn","disabled","onClick","preventDefault","variables","refetchQueries","add","app__row","Row","posts","map","post","Col","sm","md","lg","Panel","shaded","bordered","app__card","app__text","app__buttons","Button","color","id","app__delete","to","appearance","app__updLink","Update","props","postId","match","params","dataPost","titleChangeCursor","setTitleChangeCursor","descriptionChangeCursor","setDescriptionChangeCursor","updatePost","updLoading","updError","update__inputPanel","update__btnSave","style","width","updPost","update__btnCancel","Root","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fe905709.chunk.js","sourcesContent":["import gql from 'graphql-tag'\r\n\r\nexport const query=gql`\r\nquery posts{\r\n    posts{\r\n        id\r\n        title\r\n        description\r\n    }\r\n}\r\n`\r\n\r\nexport const postQuery=gql`\r\nquery post($id: ID!){\r\n    post(id: $id){\r\n        title\r\n        description\r\n    }\r\n}\r\n`\r\n\r\nexport const addMutation=gql`\r\nmutation addPost($title: String!,$description: String!){\r\n    addPost(title: $title,description: $description){\r\n        title\r\n        description\r\n    }\r\n}\r\n`\r\n\r\nexport const delMutation=gql`\r\nmutation deletePost($id: ID!){\r\n    deletePost(id: $id){\r\n        id\r\n    }\r\n}\r\n`\r\n\r\nexport const updMutation=gql`\r\nmutation updatePost($id: ID!,$title: String, $description: String){\r\n    updatePost(id: $id, title: $title, description: $description){\r\n        id\r\n        title\r\n        description\r\n    }\r\n}\r\n`","import React, { useEffect, useState } from 'react'\nimport styles from './styles/App.module.css'\nimport {query,addMutation,delMutation} from './utils/apolloQueries'\nimport {useMutation, useQuery} from '@apollo/react-hooks'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, Panel, Loader } from 'rsuite'\n\n\nfunction App() {\n    const [title,setTitle]=useState('')\n    const [description,setDescription]=useState('')\n    const {loading:loadingPosts,data:dataPosts}=useQuery(query)\n    const [data,setData]=useState()\n    \n    useEffect(()=>{\n        let mounted=true\n        if(!loadingPosts && dataPosts){\n            if(mounted){\n                setData(dataPosts)\n            }\n        }\n        \n        return () => {\n            mounted=false\n            setData()\n        }\n    },[loadingPosts,dataPosts])\n    \n    const [addPost,{error}]=useMutation(addMutation)\n    \n    const [deletePost,{ loading: mutationLoading, error: mutationError }]=useMutation(delMutation)\n    \n    const add=(e,title,description)=>{\n        e.preventDefault()\n        addPost({\n            variables: {title,description},\n            refetchQueries:['posts']\n        })\n        setTitle('')\n        setDescription('')\n    }\n    \n    const addTitle=(e)=>{\n        setTitle(e.target.value)\n    }\n    const addDescription=(e)=>{\n        setDescription(e.target.value)\n    }\n    \n    const del=(id)=>{\n        deletePost({\n            variables: {id},\n            refetchQueries:['posts']\n        })\n    }\n    \n    if(error){\n        console.log({message:error})\n        return <p>Encountered a problem while adding new post</p>\n    }\n    if(mutationError){\n        console.log({message:mutationError})\n        return <p>Not able to delete</p>\n    }\n    if(mutationLoading){\n        return <Loader center content=\"loading\" />\n    }\n    if(loadingPosts) return <Loader center content=\"loading\" />\n    \n  return (\n        <>\n            <div className={styles.app__inputPanel}>\n                <center><h4><strong>Notekeeper</strong></h4></center>\n                <input \n                    onChange={addTitle}\n                    value={title}\n                    placeholder=\"Enter a title\"\n                />\n                <input\n                    onChange={addDescription}\n                    value={description}\n                    placeholder=\"Enter a description\"\n                />\n                <button className={styles.app__addBtn} disabled={!title && !description} onClick={(e)=>add(e,title,description)}>\n                    Add Note\n                </button>\n            </div>\n            <div className={styles.app__row}>\n            <Row>\n            {\n                data &&\n                data.posts.map((post)=>(\n                    <Col sm={12} md={6} lg={4} key={post.id}>\n                        <Panel shaded bordered className={styles.app__card}>\n                            <div className={styles.app__text}>\n                                <p><strong>Title :</strong> {post.title}</p>\n                                <p><strong>Description :</strong> {post.description}</p>\n                            </div>\n                            <div className={styles.app__buttons}>\n                                <Button color=\"red\" onClick={del(post.id)} className={styles.app__delete}>\n                                    Delete Post\n                                </Button>\n                                <Link to={`/update/${post.id}`}>\n                                    <Button appearance=\"default\" color=\"green\" className={styles.app__updLink}>\n                                        Update\n                                    </Button>\n                                </Link>\n                            </div>\n                        </Panel>\n                    </Col>\n                ))\n            }\n            </Row>\n            </div>\n        </>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { Link } from 'react-router-dom'\r\nimport {postQuery,updMutation} from '../utils/apolloQueries'\r\nimport styles from '../styles/Update.module.css'\r\nimport { Button, Loader } from 'rsuite'\r\n\r\nfunction Update(props) {\r\n    const {postId}=props.match.params\r\n    const {loading,data:dataPost}=useQuery(postQuery,{\r\n        variables: {id: postId}\r\n    })\r\n    \r\n    const [data,setData]=useState()\r\n    const [title,setTitle]=useState('')\r\n    const [description,setDescription]=useState('')\r\n    const [titleChangeCursor,setTitleChangeCursor]=useState(false)\r\n    const [descriptionChangeCursor,setDescriptionChangeCursor]=useState(false)\r\n    const [updatePost,{loading: updLoading, error: updError}]=useMutation(updMutation)\r\n    \r\n    useEffect(()=>{\r\n        setData(dataPost)\r\n        return ()=>{\r\n            setData()\r\n        }\r\n    },[dataPost])\r\n    \r\n    const changeTitleHandler=(e)=>{\r\n        setTitleChangeCursor(true)\r\n        setTitle(e.target.value)\r\n    }\r\n    const changeDescriptionHandler=(e)=>{\r\n        setDescriptionChangeCursor(true)\r\n        setDescription(e.target.value)\r\n    }\r\n    \r\n    const updPost=(id,title,description)=>{\r\n        if(!titleChangeCursor && !descriptionChangeCursor){\r\n            updatePost({\r\n                variables:{id,title:data.post.title,description:data.post.title},\r\n                refetchQueries:['post','posts']\r\n            })\r\n        }else if(!titleChangeCursor){\r\n            updatePost({\r\n                variables:{id,title:data.post.title,description},\r\n                refetchQueries:['post','posts']\r\n            })\r\n        }else if(!descriptionChangeCursor){\r\n            updatePost({\r\n                variables:{id,title,description:data.post.description},\r\n                refetchQueries:['post','posts']\r\n            })\r\n        }else{\r\n            updatePost({\r\n                variables:{id,title,description},\r\n                refetchQueries:['post','posts']\r\n            })\r\n        }\r\n        setTitleChangeCursor(false)\r\n        setDescriptionChangeCursor(false)\r\n    }\r\n    \r\n    if(updLoading){\r\n        return <Loader center content=\"loading\" />\r\n    }\r\n    \r\n    if(updError){\r\n        return <p>Error while updating</p>\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {\r\n                !loading && data &&\r\n                <div className={styles.update__inputPanel}>\r\n                    <input\r\n                        placeholder={data.post.title}\r\n                        value={title}\r\n                        onChange={changeTitleHandler}\r\n                    />\r\n                    <input\r\n                        placeholder={data.post.description}\r\n                        value={description}\r\n                        onChange={changeDescriptionHandler}\r\n                    />\r\n                </div>\r\n            }\r\n            <div className={styles.update__btnSave}>\r\n                <Link to=\"/\">\r\n                    <Button  color=\"green\" style={{width:'100px'}} onClick={()=>updPost(postId,title,description)}>\r\n                        Save\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n            <div className={styles.update__btnCancel}>\r\n                <Link to=\"/\">\r\n                    <Button color=\"red\" style={{width:'100px'}}>Cancel</Button>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Update\r\n","import React from 'react'\r\nimport App from './App'\r\nimport Update from './components/Update'\r\nimport { BrowserRouter as Router,Route,Switch } from 'react-router-dom'\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\nfunction Root() {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/' component={App}/>\r\n                    <Route exact path=\"/update/:postId\" render={(props) => \r\n                        <Update {...props} />}\r\n                    />\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Root\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.module.css';\nimport Root from './Root';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloClient from 'apollo-client'\nimport {InMemoryCache} from 'apollo-cache-inmemory'\nimport { createHttpLink } from 'apollo-link-http'\nimport {ApolloProvider} from '@apollo/react-hooks'\n\nconst httpLink=createHttpLink({\n    uri:'/graphql'\n})\n\nconst client=new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <React.StrictMode>\n        <ApolloProvider client={client}>\n            <Root />\n        </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__inputPanel\":\"App_app__inputPanel__1_X7N\",\"app__addBtn\":\"App_app__addBtn__2qXG8\",\"app__row\":\"App_app__row__eEwwR\",\"app__card\":\"App_app__card__A44V7\",\"app__text\":\"App_app__text__TwegK\",\"app__buttons\":\"App_app__buttons__2iWfh\",\"app__updLink\":\"App_app__updLink__1d1gf\",\"app__delete\":\"App_app__delete__2VxQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"update__inputPanel\":\"Update_update__inputPanel__2Ysr-\",\"update__btnSave\":\"Update_update__btnSave__3hagV\",\"update__btnCancel\":\"Update_update__btnCancel__rOX-l\"};"],"sourceRoot":""}